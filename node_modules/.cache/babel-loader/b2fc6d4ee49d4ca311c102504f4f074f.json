{"ast":null,"code":"var _jsxFileName = \"/Users/avishein/Desktop/Programs/8vdx/tictactoe/src/tictactoe/Tictac.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './tictac.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tictac = () => {\n  _s();\n\n  const [turn, setTurn] = useState('X');\n  const [winner, setWinner] = useState('');\n  const [cells, setCells] = useState(Array(9).fill(''));\n\n  const reset = () => {\n    setCells(Array(9).fill(''));\n    setWinner('');\n  };\n\n  const checkDraw = squares => {\n    for (let space in squares) {\n      console.log('count: ' + count);\n    }\n  };\n\n  const checkWin = squares => {\n    let combos = {\n      across: [[0, 1, 2], [3, 4, 5], [6, 7, 8]],\n      down: [[0, 3, 6], [1, 4, 7], [2, 5, 8]],\n      diag: [[0, 4, 8], [2, 4, 6]]\n    };\n\n    for (let combo in combos) {\n      combos[combo].forEach(pattern => {\n        if (!(squares[pattern[0]] === '') && squares[pattern[0]] === squares[pattern[1]] && squares[pattern[1]] === squares[pattern[2]]) {\n          setWinner(squares[pattern[0]] + \" is the winner!\");\n        }\n      });\n    }\n  };\n\n  const handleClick = num => {\n    if (cells[num] !== '') {\n      return;\n    }\n\n    let squares = [...cells];\n\n    if (turn === 'X') {\n      squares[num] = 'X';\n      setTurn('O');\n    } else {\n      squares[num] = 'O';\n      setTurn('X');\n    }\n\n    checkWin(squares);\n    checkDraw(squares);\n    setCells(squares);\n  };\n\n  const Cell = _ref => {\n    let {\n      num\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: () => handleClick(num),\n      children: [\" \", cells[num], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Play Tic Tac Toe \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [\"Turn: \", turn, /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            num: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            num: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), winner && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", winner, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => reset(),\n        children: \" Play Again \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tictac, \"Wxgcu0KMkM1zBK1oOmYFVWMzytw=\");\n\n_c = Tictac;\nexport default Tictac;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tictac\");","map":{"version":3,"names":["React","useState","Tictac","turn","setTurn","winner","setWinner","cells","setCells","Array","fill","reset","checkDraw","squares","space","console","log","count","checkWin","combos","across","down","diag","combo","forEach","pattern","handleClick","num","Cell"],"sources":["/Users/avishein/Desktop/Programs/8vdx/tictactoe/src/tictactoe/Tictac.js"],"sourcesContent":["import React, {useState} from 'react';\nimport './tictac.css';\n\n\nconst Tictac = () => {\n\n    const [turn, setTurn] = useState('X');\n    const [winner, setWinner] = useState('');\n    const [cells, setCells] = useState(Array(9).fill(''));\n\n\n    const reset = () =>{\n        setCells(Array(9).fill(''));\n        setWinner('');\n    }\n    const checkDraw = (squares) => {\n        for (let space in squares) {\n            console.log('count: '+ count);\n\n        }\n    }\n\n    const checkWin = (squares) => {\n        let combos = {\n            across: [\n                [0,1,2],\n                [3,4,5],\n                [6,7,8]\n            ],\n            down: [\n                [0,3,6],\n                [1,4,7],\n                [2,5,8]\n            ],\n            diag: [\n                [0,4,8],\n                [2,4,6]\n            ]\n        };\n\n        for(let combo in combos){\n            combos[combo].forEach ((pattern) => {\n                if(!(squares[pattern[0]] === '') &&\n                    squares[pattern[0]] === squares[pattern[1]] &&\n                    squares[pattern[1]] === squares[pattern[2]]) {\n                    setWinner(squares[pattern[0]] + \" is the winner!\")\n                }\n            });\n        }\n    }\n\n    const handleClick = (num) => {\n        if(cells[num] !== ''){\n            return;\n        }\n        let squares = [...cells];\n        if (turn === 'X'){\n            squares[num] = 'X';\n            setTurn('O');\n        } else {\n            squares[num] = 'O';\n            setTurn('X');\n        }\n        checkWin(squares);\n        checkDraw(squares);\n        setCells(squares);\n    }\n\n    const Cell = ({num}) =>{\n        return <td onClick={() => handleClick(num)}> {cells[num]} </td>\n    }\n\n    return (\n    <div className='container'>\n        <h1> Play Tic Tac Toe </h1>\n        <table>\n        Turn: {turn}\n            <tbody>\n                <tr>\n                    <Cell num= {0}/>\n                    <Cell num= {1}/>\n                    <Cell num= {2}/>\n                </tr>\n                <tr>\n                    <Cell num= {3}/>\n                    <Cell num= {4}/>\n                    <Cell num= {5}/>\n                </tr>\n                <tr>\n                    <Cell num= {6}/>\n                    <Cell num= {7}/>\n                    <Cell num= {8}/>\n                </tr>\n            </tbody>\n        </table>\n        {winner && (\n            <>\n            <h2> {winner} </h2>\n            <button onClick = {() => reset()}> Play Again </button>\n            </>\n        )}\n       \n\n    </div>\n  )\n}\n\nexport default Tictac"],"mappings":"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"},"metadata":{},"sourceType":"module"}